{"ast":null,"code":"import { userActionTypes } from './user_types'; // Initial state set up.\n\nconst initialState = {\n  currentUser: null\n}; // When action gets fired, the state will change accordingly via this reducer function.\n// Every single action that gets fired will trigger the reducers even if it's the relative action for reducers.\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case userActionTypes.SET_CURRENT_USER:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/frontend-app/src/redux/user/user_reducer.js"],"names":["userActionTypes","initialState","currentUser","userReducer","state","action","type","SET_CURRENT_USER","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB,C,CAIA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAe,CAACO,gBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFf,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,WAAf","sourcesContent":["import { userActionTypes } from './user_types';\n\n// Initial state set up.\nconst initialState = {\n  currentUser: null,\n};\n\n// When action gets fired, the state will change accordingly via this reducer function.\n// Every single action that gets fired will trigger the reducers even if it's the relative action for reducers.\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case userActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}