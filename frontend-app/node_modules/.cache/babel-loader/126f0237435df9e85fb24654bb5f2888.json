{"ast":null,"code":"var _jsxFileName = \"/Users/ekim5/my_code/projects/ed-shop/src/App.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from './pages/homepage/HomePage';\nimport ShopPage from './pages/shop/ShopPage';\nimport LoginSignupPage from './pages/login_signup_page/LoginSignupPage';\nimport NavBar from './components/navbar/NavBar';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utilities';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    /* \n      An observer method for current user. This the recommended way to get the current user)\n      This is a Firebase feature that allows user persistence. It's an open subscriber that listens to state changes on the Firebase backend. \n    */\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // If user is signed in.\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          // Auth approved user data retrieved from firestore DB\n          const userData = snapShot.data();\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...userData\n            }\n          });\n        });\n        console.log(this.state);\n      } else {\n        // No user is signed in.\n        this.setState({\n          currentUser: null\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: LoginSignupPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/App.js"],"names":["React","Route","HomePage","ShopPage","LoginSignupPage","NavBar","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","userData","data","setState","id","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,+BAAhD;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAOdC,mBAPc,GAOQ,IAPR;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB;;;;AAIA,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AACZ;AACA,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACA,gBAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AAEA,eAAKC,QAAL,CAAc;AACZT,YAAAA,WAAW,EAAE;AACXU,cAAAA,EAAE,EAAEJ,QAAQ,CAACI,EADF;AAEX,iBAAGH;AAFQ;AADD,WAAd;AAMD,SAVD;AAYAI,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACD,OAhBD,MAgBO;AACL;AACA,aAAKU,QAAL,CAAc;AACZT,UAAAA,WAAW,EAAE;AADD,SAAd;AAGD;AACF,KAvB0B,CAA3B;AAwBD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAKf,mBAAL;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAvD+B;;AA0DlC,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport HomePage from './pages/homepage/HomePage';\nimport ShopPage from './pages/shop/ShopPage';\nimport LoginSignupPage from './pages/login_signup_page/LoginSignupPage';\nimport NavBar from './components/navbar/NavBar';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utilities';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    /* \n      An observer method for current user. This the recommended way to get the current user)\n      This is a Firebase feature that allows user persistence. It's an open subscriber that listens to state changes on the Firebase backend. \n    */\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        // If user is signed in.\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          // Auth approved user data retrieved from firestore DB\n          const userData = snapShot.data();\n\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...userData,\n            },\n          });\n        });\n\n        console.log(this.state);\n      } else {\n        // No user is signed in.\n        this.setState({\n          currentUser: null,\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar currentUser={this.state.currentUser} />\n\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/shop\" component={ShopPage} />\n        <Route path=\"/login\" component={LoginSignupPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}