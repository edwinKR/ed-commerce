{"ast":null,"code":"async function generateDataCollection() {\n  const promises = [];\n\n  for (let i = 0; i < 10; i++) {\n    promises.push(fetch('https://dog.ceo/api/breeds/image/random'));\n  }\n\n  const collectedPromises = await Promise.all(promises);\n  const collectedResponses = await Promise.all(collectedPromises.map(res => res.json()));\n  return collectedResponses.map((data, uid) => {\n    const newData = {};\n    newData.id = uid;\n    newData.name = `Doggie ${newData.id}`;\n    newData.imageUrl = data.message;\n    newData.price = Math.floor(Math.random() * 10) + 1;\n    return newData;\n  }); // promises.map(async (singlePromise, uid) => {\n  //   const newData = {};\n  //   await singlePromise\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       newData.id = uid;\n  //       newData.name = `Doggie ${newData.id}`;\n  //       newData.imageUrl = data.message;\n  //       newData.price = Math.floor(Math.random() * 10) + 1;\n  //     });\n  //   return newData;\n  // }),\n  // );\n  // await Promise.all(collectedPromises)map(res => res.json()).reduce((acc, curr) => {}, {});\n  // return collectedData;\n}\n\nexport default generateDataCollection;","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/pages/shop/shop_dummy_data.js"],"names":["generateDataCollection","promises","i","push","fetch","collectedPromises","Promise","all","collectedResponses","map","res","json","data","uid","newData","id","name","imageUrl","message","price","Math","floor","random"],"mappings":"AAAA,eAAeA,sBAAf,GAAwC;AACtC,QAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAK,CAAC,yCAAD,CAAnB;AACD;;AAED,QAAMC,iBAAiB,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAAhC;AACA,QAAMO,kBAAkB,GAAG,MAAMF,OAAO,CAACC,GAAR,CAAYF,iBAAiB,CAACI,GAAlB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA7B,CAAZ,CAAjC;AACA,SAAOH,kBAAkB,CAACC,GAAnB,CAAuB,CAACG,IAAD,EAAOC,GAAP,KAAe;AAC3C,UAAMC,OAAO,GAAG,EAAhB;AACAA,IAAAA,OAAO,CAACC,EAAR,GAAaF,GAAb;AACAC,IAAAA,OAAO,CAACE,IAAR,GAAgB,UAASF,OAAO,CAACC,EAAG,EAApC;AACAD,IAAAA,OAAO,CAACG,QAAR,GAAmBL,IAAI,CAACM,OAAxB;AACAJ,IAAAA,OAAO,CAACK,KAAR,GAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAjD;AACA,WAAOR,OAAP;AACD,GAPM,CAAP,CARsC,CAiBtC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAED,eAAed,sBAAf","sourcesContent":["async function generateDataCollection() {\n  const promises = [];\n  for (let i = 0; i < 10; i++) {\n    promises.push(fetch('https://dog.ceo/api/breeds/image/random'));\n  }\n\n  const collectedPromises = await Promise.all(promises);\n  const collectedResponses = await Promise.all(collectedPromises.map(res => res.json()));\n  return collectedResponses.map((data, uid) => {\n    const newData = {};\n    newData.id = uid;\n    newData.name = `Doggie ${newData.id}`;\n    newData.imageUrl = data.message;\n    newData.price = Math.floor(Math.random() * 10) + 1;\n    return newData;\n  });\n\n  // promises.map(async (singlePromise, uid) => {\n  //   const newData = {};\n\n  //   await singlePromise\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       newData.id = uid;\n  //       newData.name = `Doggie ${newData.id}`;\n  //       newData.imageUrl = data.message;\n  //       newData.price = Math.floor(Math.random() * 10) + 1;\n  //     });\n  //   return newData;\n  // }),\n  // );\n  // await Promise.all(collectedPromises)map(res => res.json()).reduce((acc, curr) => {}, {});\n\n  // return collectedData;\n}\n\nexport default generateDataCollection;\n"]},"metadata":{},"sourceType":"module"}