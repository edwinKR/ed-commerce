{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from 'firebase/app';\nimport * as firebaseui from 'firebaseui'; // Adding the Firebase products to use (auth,db)\n\nimport 'firebase/auth'; // firebase DB\n\nimport 'firebase/firestore'; // pre-built UI\n\nimport 'firebaseui'; // The web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyC1b2P_4m0aiYVx_jG0XarNajct0P7CVuc',\n  authDomain: 'jela-bakery-db.firebaseapp.com',\n  databaseURL: 'https://jela-bakery-db.firebaseio.com',\n  projectId: 'jela-bakery-db',\n  storageBucket: 'jela-bakery-db.appspot.com',\n  messagingSenderId: '304892963099',\n  appId: '1:304892963099:web:4f90e5ae7a56296ae60bbe',\n  measurementId: 'G-8NJEN1G2ZK'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // Firebase Utility methods\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Handling the Google Accounts sign-in flow with Firebase JS SDK\n// Create an instance of the Google provider project\n\nconst provider = new firebase.auth.GoogleAuthProvider(); // Trigger Google Popup everytime user wants to signin with Google account\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  return auth.signInWithPopup(provider);\n}; // Initialize the FirebaseUI Widget using Firebase.\n\nexport const ui = new firebaseui.auth.AuthUI(firebase.auth()); // Export the entire Firebase library just in case we need it in the app.\n\nexport default firebase;","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/firebase/firebase.utilities.js"],"names":["firebase","firebaseui","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","ui","AuthUI"],"mappings":"AAAA;AACA;AACA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B,C,CAEA;;AACA,OAAO,eAAP,C,CACA;;AACA,OAAO,oBAAP,C,CAEA;;AACA,OAAO,YAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,gCAFS;AAGrBC,EAAAA,WAAW,EAAE,uCAHQ;AAIrBC,EAAAA,SAAS,EAAE,gBAJU;AAKrBC,EAAAA,aAAa,EAAE,4BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAWA;;AACAV,QAAQ,CAACW,aAAT,CAAuBT,cAAvB,E,CAEA;;AACA,OAAO,MAAMU,IAAI,GAAGZ,QAAQ,CAACY,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB,C,CAEP;AACA;;AACA,MAAMC,QAAQ,GAAG,IAAId,QAAQ,CAACY,IAAT,CAAcG,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAON,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMM,EAAE,GAAG,IAAInB,UAAU,CAACW,IAAX,CAAgBS,MAApB,CAA2BrB,QAAQ,CAACY,IAAT,EAA3B,CAAX,C,CAEP;;AACA,eAAeZ,QAAf","sourcesContent":["/* eslint-disable import/prefer-default-export */\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from 'firebase/app';\nimport * as firebaseui from 'firebaseui';\n\n// Adding the Firebase products to use (auth,db)\nimport 'firebase/auth';\n// firebase DB\nimport 'firebase/firestore';\n\n// pre-built UI\nimport 'firebaseui';\n\n// The web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyC1b2P_4m0aiYVx_jG0XarNajct0P7CVuc',\n  authDomain: 'jela-bakery-db.firebaseapp.com',\n  databaseURL: 'https://jela-bakery-db.firebaseio.com',\n  projectId: 'jela-bakery-db',\n  storageBucket: 'jela-bakery-db.appspot.com',\n  messagingSenderId: '304892963099',\n  appId: '1:304892963099:web:4f90e5ae7a56296ae60bbe',\n  measurementId: 'G-8NJEN1G2ZK',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Firebase Utility methods\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Handling the Google Accounts sign-in flow with Firebase JS SDK\n// Create an instance of the Google provider project\nconst provider = new firebase.auth.GoogleAuthProvider();\n// Trigger Google Popup everytime user wants to signin with Google account\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => {\n  return auth.signInWithPopup(provider);\n};\n\n// Initialize the FirebaseUI Widget using Firebase.\nexport const ui = new firebaseui.auth.AuthUI(firebase.auth());\n\n// Export the entire Firebase library just in case we need it in the app.\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}