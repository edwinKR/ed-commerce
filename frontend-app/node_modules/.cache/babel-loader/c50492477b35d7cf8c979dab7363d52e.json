{"ast":null,"code":"import { shopActionTypes } from './shop_types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\nexport const initiateFetchShopData = () => {\n  return {\n    type: shopActionTypes.REQUEST_SHOP_DATA\n  };\n};\nexport const receiveShopData = shopData => {\n  console.log(shopData);\n  return {\n    type: shopActionTypes.RECEIVED_SHOP_DATA,\n    payload: shopData\n  };\n};\nexport const handleFetchError = errorMessage => {\n  return {\n    type: shopActionTypes.INVALIDATE_SHOP_DATA,\n    payload: errorMessage\n  };\n};\nexport const fetchShopDataAsync = () => {\n  return async dispatch => {\n    try {\n      const categoriesRef = await firestore.collection('categories');\n      await dispatch(initiateFetchShopData());\n      const snapshot = await categoriesRef.get();\n      const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n      dispatch(receiveShopData(shopDataMap)); // this.props.updateShopData(shopDataMap);\n    } catch (error) {\n      dispatch(handleFetchError(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/redux/shop/shop_action.js"],"names":["shopActionTypes","firestore","convertCollectionSnapshotToMap","initiateFetchShopData","type","REQUEST_SHOP_DATA","receiveShopData","shopData","console","log","RECEIVED_SHOP_DATA","payload","handleFetchError","errorMessage","INVALIDATE_SHOP_DATA","fetchShopDataAsync","dispatch","categoriesRef","collection","snapshot","get","shopDataMap","error","message"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,mCAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADjB,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO;AACLH,IAAAA,IAAI,EAAEJ,eAAe,CAACU,kBADjB;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMK,gBAAgB,GAAGC,YAAY,IAAI;AAC9C,SAAO;AACLT,IAAAA,IAAI,EAAEJ,eAAe,CAACc,oBADjB;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACtC,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,aAAa,GAAG,MAAMhB,SAAS,CAACiB,UAAV,CAAqB,YAArB,CAA5B;AACA,YAAMF,QAAQ,CAACb,qBAAqB,EAAtB,CAAd;AACA,YAAMgB,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,YAAMC,WAAW,GAAG,MAAMnB,8BAA8B,CAACiB,QAAD,CAAxD;AACAH,MAAAA,QAAQ,CAACV,eAAe,CAACe,WAAD,CAAhB,CAAR,CALE,CAMF;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAACJ,gBAAgB,CAACU,KAAK,CAACC,OAAP,CAAjB,CAAR;AACD;AACF,GAXD;AAYD,CAbM","sourcesContent":["import { shopActionTypes } from './shop_types';\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\n\nexport const initiateFetchShopData = () => {\n  return {\n    type: shopActionTypes.REQUEST_SHOP_DATA,\n  };\n};\n\nexport const receiveShopData = shopData => {\n  console.log(shopData);\n  return {\n    type: shopActionTypes.RECEIVED_SHOP_DATA,\n    payload: shopData,\n  };\n};\n\nexport const handleFetchError = errorMessage => {\n  return {\n    type: shopActionTypes.INVALIDATE_SHOP_DATA,\n    payload: errorMessage,\n  };\n};\n\nexport const fetchShopDataAsync = () => {\n  return async dispatch => {\n    try {\n      const categoriesRef = await firestore.collection('categories');\n      await dispatch(initiateFetchShopData());\n      const snapshot = await categoriesRef.get();\n      const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n      dispatch(receiveShopData(shopDataMap));\n      // this.props.updateShopData(shopDataMap);\n    } catch (error) {\n      dispatch(handleFetchError(error.message));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}