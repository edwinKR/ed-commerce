{"ast":null,"code":"var _jsxFileName = \"/Users/ekim5/my_code/projects/ed-shop/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PreviewAllItemContainer from '../../components/preview_all_item_container/PreviewAllItemContainer';\nimport PreviewItemCollection from '../preview_item_collection/PreviewItemCollection';\nimport { updateShopData } from '../../redux/shop/shop_action';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const categoriesRef = firestore.collection('categories');\n    categoriesRef.onSnapshot(async snapshot => {\n      const shopDataMap = convertCollectionSnapshotToMap(snapshot);\n      updateShopData(shopDataMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: PreviewAllItemContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionRouteName`,\n      component: PreviewItemCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    updateShopData: shopDataMap => dispatch(updateShopData(shopDataMap))\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/pages/shop/ShopPage.js"],"names":["React","Route","connect","PreviewAllItemContainer","PreviewItemCollection","updateShopData","firestore","convertCollectionSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","categoriesRef","collection","onSnapshot","snapshot","shopDataMap","render","match","props","path","mapDispatchtoProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,uBAAP,MAAoC,qEAApC;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AAEA,SAASC,cAAT,QAA+B,8BAA/B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,mCAA1D;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,YAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,WAAW,GAAGT,8BAA8B,CAACQ,QAAD,CAAlD;AACAV,MAAAA,cAAc,CAACW,WAAD,CAAd;AACD,KAHD;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,uBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,uBAA3B;AAAmD,MAAA,SAAS,EAAEhB,qBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AApBoC;;AAuBvC,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,cAAc,EAAEW,WAAW,IAAIM,QAAQ,CAACjB,cAAc,CAACW,WAAD,CAAf;AADlC,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PreviewAllItemContainer from '../../components/preview_all_item_container/PreviewAllItemContainer';\nimport PreviewItemCollection from '../preview_item_collection/PreviewItemCollection';\n\nimport { updateShopData } from '../../redux/shop/shop_action';\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const categoriesRef = firestore.collection('categories');\n\n    categoriesRef.onSnapshot(async snapshot => {\n      const shopDataMap = convertCollectionSnapshotToMap(snapshot);\n      updateShopData(shopDataMap);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={PreviewAllItemContainer} />\n        <Route path={`${match.path}/:collectionRouteName`} component={PreviewItemCollection} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    updateShopData: shopDataMap => dispatch(updateShopData(shopDataMap)),\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}