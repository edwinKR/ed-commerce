{"ast":null,"code":"import { shopActionTypes } from './shop_types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\nexport const initiateFetchShopData = () => {\n  return {\n    type: shopActionTypes.REQUEST_SHOP_DATA\n  };\n};\nexport const receiveShopData = shopData => {\n  return {\n    type: shopActionTypes.RECEIVED_SHOP_DATA,\n    payload: shopData\n  };\n};\nexport const handleFetchError = errorMessage => {\n  return {\n    type: shopActionTypes.INVALIDATE_SHOP_DATA,\n    payload: errorMessage\n  };\n};\nexport const fetchShopDataAsync = () => {\n  return async dispatch => {\n    const categoriesRef = await firestore.collection('categories');\n    await dispatch(initiateFetchShopData());\n\n    try {} catch (error) {\n      dispatch(handleFetchError);\n    }\n\n    const snapshot = await categoriesRef.get();\n    const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n    dispatch(receiveShopData(shopDataMap)); // this.props.updateShopData(shopDataMap);\n  };\n};","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/redux/shop/shop_action.js"],"names":["shopActionTypes","firestore","convertCollectionSnapshotToMap","initiateFetchShopData","type","REQUEST_SHOP_DATA","receiveShopData","shopData","RECEIVED_SHOP_DATA","payload","handleFetchError","errorMessage","INVALIDATE_SHOP_DATA","fetchShopDataAsync","dispatch","categoriesRef","collection","error","snapshot","get","shopDataMap"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,mCAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADjB,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AACzC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,kBADjB;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAGC,YAAY,IAAI;AAC9C,SAAO;AACLP,IAAAA,IAAI,EAAEJ,eAAe,CAACY,oBADjB;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACtC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,aAAa,GAAG,MAAMd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAA5B;AACA,UAAMF,QAAQ,CAACX,qBAAqB,EAAtB,CAAd;;AAEA,QAAI,CACH,CADD,CACE,OAAOc,KAAP,EAAc;AACdH,MAAAA,QAAQ,CAACJ,gBAAD,CAAR;AACD;;AACD,UAAMQ,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAd,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMlB,8BAA8B,CAACgB,QAAD,CAAxD;AACAJ,IAAAA,QAAQ,CAACR,eAAe,CAACc,WAAD,CAAhB,CAAR,CAVuB,CAWvB;AACD,GAZD;AAaD,CAdM","sourcesContent":["import { shopActionTypes } from './shop_types';\n\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utilities';\n\nexport const initiateFetchShopData = () => {\n  return {\n    type: shopActionTypes.REQUEST_SHOP_DATA,\n  };\n};\n\nexport const receiveShopData = shopData => {\n  return {\n    type: shopActionTypes.RECEIVED_SHOP_DATA,\n    payload: shopData,\n  };\n};\n\nexport const handleFetchError = errorMessage => {\n  return {\n    type: shopActionTypes.INVALIDATE_SHOP_DATA,\n    payload: errorMessage,\n  };\n};\n\nexport const fetchShopDataAsync = () => {\n  return async dispatch => {\n    const categoriesRef = await firestore.collection('categories');\n    await dispatch(initiateFetchShopData());\n\n    try {\n    } catch (error) {\n      dispatch(handleFetchError);\n    }\n    const snapshot = await categoriesRef.get();\n    const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n    dispatch(receiveShopData(shopDataMap));\n    // this.props.updateShopData(shopDataMap);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}