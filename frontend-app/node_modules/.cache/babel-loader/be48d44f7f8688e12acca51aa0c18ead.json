{"ast":null,"code":"var _jsxFileName = \"/Users/ekim5/my_code/projects/ed-shop/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchShopDataAsync } from '../../redux/shop/shop_action';\nimport PreviewAllItemContainer from '../../components/preview_all_item_container/PreviewAllItemContainer';\nimport PreviewItemCollection from '../preview_item_collection/PreviewItemCollection';\nimport { updateShopData } from '../ ../redux/shop/shop_action';\nimport WithSpinner from '../../components/with_spinner_HOC/WithSpinner';\nconst PreviewAllItemContainerWithSpinner = WithSpinner(PreviewAllItemContainer);\nconst PreviewItemCollectionWithSpinner = WithSpinner(PreviewItemCollection);\n\nclass ShopPage extends React.Component {\n  async componentDidMount() {\n    // const categoriesRef = await firestore.collection('categories');\n    // const snapshot = await categoriesRef.get();\n    // const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n    // this.props.updateShopData(shopDataMap);\n    this.setState({\n      loading: false\n    }); // Keeping the below code: Another way to utilize Firestore and retreiving data.\n    // categoriesRef.onSnapshot(async snapshot => {\n    //   const shopDataMap = convertCollectionSnapshotToMap(snapshot);\n    //   this.props.updateShopData(shopDataMap);\n    //   this.setState({\n    //     loading: false,\n    //   });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: defaultProps => React.createElement(PreviewAllItemContainerWithSpinner, Object.assign({\n        isLoading: loading\n      }, defaultProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionRouteName`,\n      render: defaultProps => React.createElement(PreviewItemCollectionWithSpinner, Object.assign({\n        isLoading: loading\n      }, defaultProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    fetchShopDataAsync: () => dispatch(fetchShopDataAsync())\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/src/pages/shop/ShopPage.js"],"names":["React","Route","connect","fetchShopDataAsync","PreviewAllItemContainer","PreviewItemCollection","updateShopData","WithSpinner","PreviewAllItemContainerWithSpinner","PreviewItemCollectionWithSpinner","ShopPage","Component","componentDidMount","setState","loading","render","match","props","path","defaultProps","mapDispatchtoProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,OAAOC,uBAAP,MAAoC,qEAApC;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,MAAMC,kCAAkC,GAAGD,WAAW,CAACH,uBAAD,CAAtD;AACA,MAAMK,gCAAgC,GAAGF,WAAW,CAACF,qBAAD,CAApD;;AAEA,MAAMK,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AACrC,QAAMC,iBAAN,GAA0B;AACxB;AACA;AACA;AAEA;AAEA,SAAKC,QAAL,CAAc;AACZC,MAAAA,OAAO,EAAE;AADG,KAAd,EAPwB,CAWxB;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEC,YAAY,IAClB,oBAAC,kCAAD;AAAoC,QAAA,SAAS,EAAEL;AAA/C,SAA4DK,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEH,KAAK,CAACE,IAAK,uBADtB;AAEE,MAAA,MAAM,EAAEC,YAAY,IAClB,oBAAC,gCAAD;AAAkC,QAAA,SAAS,EAAEL;AAA7C,SAA0DK,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA5CoC;;AA+CvC,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLlB,IAAAA,kBAAkB,EAAE,MAAMkB,QAAQ,CAAClB,kBAAkB,EAAnB;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchShopDataAsync } from '../../redux/shop/shop_action';\n\nimport PreviewAllItemContainer from '../../components/preview_all_item_container/PreviewAllItemContainer';\nimport PreviewItemCollection from '../preview_item_collection/PreviewItemCollection';\n\nimport { updateShopData } from '../ ../redux/shop/shop_action';\n\nimport WithSpinner from '../../components/with_spinner_HOC/WithSpinner';\nconst PreviewAllItemContainerWithSpinner = WithSpinner(PreviewAllItemContainer);\nconst PreviewItemCollectionWithSpinner = WithSpinner(PreviewItemCollection);\n\nclass ShopPage extends React.Component {\n  async componentDidMount() {\n    // const categoriesRef = await firestore.collection('categories');\n    // const snapshot = await categoriesRef.get();\n    // const shopDataMap = await convertCollectionSnapshotToMap(snapshot);\n\n    // this.props.updateShopData(shopDataMap);\n\n    this.setState({\n      loading: false,\n    });\n\n    // Keeping the below code: Another way to utilize Firestore and retreiving data.\n    // categoriesRef.onSnapshot(async snapshot => {\n    //   const shopDataMap = convertCollectionSnapshotToMap(snapshot);\n\n    //   this.props.updateShopData(shopDataMap);\n\n    //   this.setState({\n    //     loading: false,\n    //   });\n    // });\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={defaultProps => (\n            <PreviewAllItemContainerWithSpinner isLoading={loading} {...defaultProps} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionRouteName`}\n          render={defaultProps => (\n            <PreviewItemCollectionWithSpinner isLoading={loading} {...defaultProps} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    fetchShopDataAsync: () => dispatch(fetchShopDataAsync()),\n  };\n};\n\nexport default connect(null, mapDispatchtoProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}