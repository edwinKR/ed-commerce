{"ast":null,"code":"export const addItemToCart = (currentCartItems, itemToAdd) => {\n  // Is the added item already existing in current cart items state list?\n  const existingCartItem = currentCartItems.find(item => {\n    return item.id === itemToAdd.id;\n  }); // If so, do the following.\n\n  if (existingCartItem) {\n    return currentCartItems.map(item => {\n      if (item.id === itemToAdd.id) {\n        return { ...item,\n          quantity: item.quantity + 1\n        };\n      } else {\n        return item;\n      }\n    });\n  } // If added item is added to the cart list for the first time:\n\n\n  return [...currentCartItems, { ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const decrementItemFromCart = (currentCartItems, itemToRemove) => {\n  const existingCartItem = currentCartItems.find(item => {\n    return item.id === itemToRemove.id;\n  });\n  return currentCartItems.map(item => {\n    if (item.id === itemToRemove.id) {\n      if (existingCartItem.quantity === 1) {\n        return { ...item,\n          quantity: 1\n        };\n      }\n\n      return { ...item,\n        quantity: item.quantity - 1\n      };\n    }\n\n    return item;\n  });\n};","map":{"version":3,"sources":["/Users/ekim5/my_code/projects/ed-shop/frontend-app/src/redux/cart/cart_util.js"],"names":["addItemToCart","currentCartItems","itemToAdd","existingCartItem","find","item","id","map","quantity","decrementItemFromCart","itemToRemove"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,gBAAD,EAAmBC,SAAnB,KAAiC;AAC5D;AACA,QAAMC,gBAAgB,GAAGF,gBAAgB,CAACG,IAAjB,CAAsBC,IAAI,IAAI;AACrD,WAAOA,IAAI,CAACC,EAAL,KAAYJ,SAAS,CAACI,EAA7B;AACD,GAFwB,CAAzB,CAF4D,CAM5D;;AACA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,gBAAgB,CAACM,GAAjB,CAAqBF,IAAI,IAAI;AAClC,UAAIA,IAAI,CAACC,EAAL,KAAYJ,SAAS,CAACI,EAA1B,EAA8B;AAC5B,eAAO,EAAE,GAAGD,IAAL;AAAWG,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,SAAP;AACD,OAFD,MAEO;AACL,eAAOH,IAAP;AACD;AACF,KANM,CAAP;AAOD,GAf2D,CAiB5D;;;AACA,SAAO,CAAC,GAAGJ,gBAAJ,EAAsB,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAtB,CAAP;AACD,CAnBM;AAqBP,OAAO,MAAMC,qBAAqB,GAAG,CAACR,gBAAD,EAAmBS,YAAnB,KAAoC;AACvE,QAAMP,gBAAgB,GAAGF,gBAAgB,CAACG,IAAjB,CAAsBC,IAAI,IAAI;AACrD,WAAOA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAAhC;AACD,GAFwB,CAAzB;AAIA,SAAOL,gBAAgB,CAACM,GAAjB,CAAqBF,IAAI,IAAI;AAClC,QAAIA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAA7B,EAAiC;AAC/B,UAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,eAAO,EAAE,GAAGH,IAAL;AAAWG,UAAAA,QAAQ,EAAE;AAArB,SAAP;AACD;;AACD,aAAO,EAAE,GAAGH,IAAL;AAAWG,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,OAAP;AACD;;AACD,WAAOH,IAAP;AACD,GARM,CAAP;AASD,CAdM","sourcesContent":["export const addItemToCart = (currentCartItems, itemToAdd) => {\n  // Is the added item already existing in current cart items state list?\n  const existingCartItem = currentCartItems.find(item => {\n    return item.id === itemToAdd.id;\n  });\n\n  // If so, do the following.\n  if (existingCartItem) {\n    return currentCartItems.map(item => {\n      if (item.id === itemToAdd.id) {\n        return { ...item, quantity: item.quantity + 1 };\n      } else {\n        return item;\n      }\n    });\n  }\n\n  // If added item is added to the cart list for the first time:\n  return [...currentCartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const decrementItemFromCart = (currentCartItems, itemToRemove) => {\n  const existingCartItem = currentCartItems.find(item => {\n    return item.id === itemToRemove.id;\n  });\n\n  return currentCartItems.map(item => {\n    if (item.id === itemToRemove.id) {\n      if (existingCartItem.quantity === 1) {\n        return { ...item, quantity: 1 };\n      }\n      return { ...item, quantity: item.quantity - 1 };\n    }\n    return item;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}